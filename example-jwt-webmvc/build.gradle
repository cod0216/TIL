plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	configureEach {
		// exclude LOGBACK
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'

	// password encoder
	implementation 'org.springframework.security:spring-security-crypto'

	// database
	runtimeOnly 'com.h2database:h2'

	// flyway
	implementation 'org.flywaydb:flyway-core'

	// Map Struct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
}

compileJava {
	options.compilerArgs += [
			'--enable-preview',
			'-Amapstruct.defaultComponentModel=spring', // @Mapper 사용 시 componentModel = "spring" 생략 가능
	]
}

compileTestJava {
	options.compilerArgs += [
			'--enable-preview',
			'-Amapstruct.defaultComponentModel=spring',
	]
}

test {
	useJUnitPlatform()
	jvmArgs([
			'--enable-preview',
			'-Amapstruct.defaultComponentModel=spring',
	])
}